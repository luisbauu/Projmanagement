{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis\\\\Desktop\\\\Projmanagement\\\\client\\\\src\\\\components\\\\listCustomer.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListCustomer = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n\n  const GetListCustomer = async () => {\n    try {\n      const response = await fetch('http:localhost:5000/customer');\n      const jsonData = await response.json();\n      setList(jsonData);\n      console.log(jsonData);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    GetListCustomer();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Given Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Unit No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Street\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Represented\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rep Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: list.map(tolist => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: tolist.customer_no\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tolist.surname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tolist.givenname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tolist.unit_no\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tolist.street\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tolist.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tolist.phone_no\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tolist.represented\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tolist.repname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 12\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ListCustomer, \"mo3wxvns+52yWT3GI5PbrxgLw68=\");\n\n_c = ListCustomer;\nexport default ListCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCustomer\");","map":{"version":3,"sources":["C:/Users/Luis/Desktop/Projmanagement/client/src/components/listCustomer.js"],"names":["React","Fragment","useEffect","useState","ListCustomer","list","setList","GetListCustomer","response","fetch","jsonData","json","console","log","error","message","map","tolist","customer_no","surname","givenname","unit_no","street","city","phone_no","represented","repname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAmD,OAAnD;;;AAEA,MAAMC,YAAY,GAAG,MACrB;AAAA;;AACI,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBH,QAAQ,CAAC,EAAD,CAA/B;;AAEA,QAAMI,eAAe,GAAG,YACxB;AACI,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEAL,MAAAA,OAAO,CAACI,QAAD,CAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEH,KAPD,CAOE,OAAOI,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB;AACH;AACJ,GAZD;;AAcAb,EAAAA,SAAS,CAAC,MAAK;AACXK,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAAQ,QAAC,QAAD;AAAA,2BACR;AAAO,MAAA,SAAS,EAAC,uCAAjB;AAAA,8BACI;AAAA,+BACA;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAcI;AAAA,kBACCF,IAAI,CAACW,GAAL,CAASC,MAAM,iBACb;AAAA,kCACI;AAAA,sBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKF,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKH,MAAM,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,sBAAKJ,MAAM,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA,sBAAKL,MAAM,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA,sBAAKN,MAAM,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAA,sBAAKP,MAAM,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAA,sBAAKR,MAAM,CAACS;AAAZ;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AADD;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,UAAR;AAgCH,CAtDD;;GAAMtB,Y;;KAAAA,Y;AAwDN,eAAeA,YAAf","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\r\n\r\nconst ListCustomer = () =>\r\n{\r\n    const [list,setList] = useState([]);\r\n\r\n    const GetListCustomer = async () =>\r\n    {\r\n        try {\r\n            const response = await fetch('http:localhost:5000/customer');\r\n            const jsonData = await response.json();\r\n\r\n            setList(jsonData);\r\n            console.log(jsonData);\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        GetListCustomer();\r\n    } ,[]);\r\n\r\n    return (<Fragment>\r\n    <table className=\"table table-bordered mt-5 text-center\">\r\n        <thead>\r\n        <tr>\r\n            <th>Customer No.</th>\r\n            <th>Surname</th>\r\n            <th>Given Name</th>\r\n            <th>Unit No.</th>\r\n            <th>Street</th>\r\n            <th>City</th>\r\n            <th>Phone Number</th>\r\n            <th>Represented</th>\r\n            <th>Rep Name</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {list.map(tolist =>(\r\n           <tr>\r\n               <td>{tolist.customer_no}</td>\r\n               <td>{tolist.surname}</td>\r\n               <td>{tolist.givenname}</td>\r\n               <td>{tolist.unit_no}</td>\r\n               <td>{tolist.street}</td>\r\n               <td>{tolist.city}</td>\r\n               <td>{tolist.phone_no}</td>\r\n               <td>{tolist.represented}</td>\r\n               <td>{tolist.repname}</td>\r\n            </tr>\r\n        ))}\r\n        </tbody>\r\n    </table>\r\n    </Fragment>)\r\n};\r\n\r\nexport default ListCustomer;\r\n"]},"metadata":{},"sourceType":"module"}